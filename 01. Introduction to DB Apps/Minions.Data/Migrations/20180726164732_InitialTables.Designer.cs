namespace Minions.Data.Migrations
{
    // <auto-generated />
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Infrastructure;
    using Microsoft.EntityFrameworkCore.Metadata;
    using Microsoft.EntityFrameworkCore.Migrations;

    [DbContext(typeof(MinionsDbContext))]
    [Migration("20180726164732_InitialTables")]
    partial class InitialTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Minions.Data.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Minions.Data.Models.EvilnessFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EvilnessFactors");
                });

            modelBuilder.Entity("Minions.Data.Models.Minion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("TownId");

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.ToTable("Minions");
                });

            modelBuilder.Entity("Minions.Data.Models.MinionsVillains", b =>
                {
                    b.Property<int>("MinionId");

                    b.Property<int>("VillainId");

                    b.HasKey("MinionId", "VillainId");

                    b.HasIndex("VillainId");

                    b.ToTable("MinionsVillains");
                });

            modelBuilder.Entity("Minions.Data.Models.Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("Minions.Data.Models.Villain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EvilnessFactorId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EvilnessFactorId");

                    b.ToTable("Villains");
                });

            modelBuilder.Entity("Minions.Data.Models.Minion", b =>
                {
                    b.HasOne("Minions.Data.Models.Town", "Town")
                        .WithMany("Minions")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Minions.Data.Models.MinionsVillains", b =>
                {
                    b.HasOne("Minions.Data.Models.Minion", "Minion")
                        .WithMany("Villains")
                        .HasForeignKey("MinionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Minions.Data.Models.Villain", "Villain")
                        .WithMany("Minions")
                        .HasForeignKey("VillainId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Minions.Data.Models.Town", b =>
                {
                    b.HasOne("Minions.Data.Models.Country", "Country")
                        .WithMany("Towns")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Minions.Data.Models.Villain", b =>
                {
                    b.HasOne("Minions.Data.Models.EvilnessFactor", "EvilnessFactor")
                        .WithMany("Villains")
                        .HasForeignKey("EvilnessFactorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
